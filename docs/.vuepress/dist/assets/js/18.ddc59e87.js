(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{369:function(t,a,s){"use strict";s.r(a);var n=s(42),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("Canvas API 提供了一个通过JavaScript 和 HTML的"),s("code",[t._v("<canvas>")]),t._v("元素来绘制图形的方式。它可以用于动画、游戏画面、数据可视化、图片编辑以及实时视频处理等方面。")]),t._v(" "),s("p",[t._v("Canvas API主要聚焦于2D图形。而同样使用"),s("code",[t._v("<canvas>")]),t._v("元素的 WebGL API 则用于绘制硬件加速的2D和3D图形。")]),t._v(" "),s("h3",{attrs:{id:"canvas标签"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#canvas标签"}},[t._v("#")]),t._v(" Canvas标签")]),t._v(" "),s("p",[t._v("使用"),s("code",[t._v("<canvas>")]),t._v("元素不是非常难，Canvas 的默认大小为300像素×150像素（宽×高，像素的单位是px）。可以使用HTML的高度和宽度属性来自定义Canvas 的尺寸。也可以通过JavaScript修改它的宽高。但是不要使用CSS样式修改它的宽高（会扭曲）。")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 使用标签的width和height属性修改宽高 --\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("canvas")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("canvas"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("width")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("600"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("300"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 兼容提示 --\x3e")]),t._v("\n  您的浏览器版本太低，请升级浏览器\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 替代方案，使用flash --\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("canvas")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}},[s("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过 js 修改")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" canvas "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'canvas'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  canvas"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("900")]),t._v("\n  canvas"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("height "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("600")]),t._v("\n")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h3",{attrs:{id:"渲染上下文-the-rendering-context"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#渲染上下文-the-rendering-context"}},[t._v("#")]),t._v(" 渲染上下文(The rendering context)")]),t._v(" "),s("p",[t._v("渲染上下文，可以用来绘制和处理要展示的内容。说白了就是提供了一个"),s("strong",[t._v("操作画布的接口")]),t._v("。如同画图上面的工具栏，通过不同的API做不同的处理。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" canvas "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'canvas'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用 canvas 的 getContext 方法可以获得渲染上下文")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" ctx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" canvas"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2d'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 得到 CanvasRenderingContext2D 对象")]),t._v("\n")])])]),s("h3",{attrs:{id:"检查支持性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#检查支持性"}},[t._v("#")]),t._v(" 检查支持性")]),t._v(" "),s("p",[t._v("可以通过检查"),s("code",[t._v("canvas")]),t._v("对象是否存在"),s("code",[t._v("getContext")]),t._v("方法来判断浏览器是否支持")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" canvas "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'canvas'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("canvas"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" ctx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" canvas"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2d'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// drawing code here")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// canvas-unsupported code here")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"移动画笔到指定位置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#移动画笔到指定位置"}},[t._v("#")]),t._v(" 移动画笔到指定位置")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("moveTo(x, y)")]),t._v(":指定你的起始位置。")])]),t._v(" "),s("h3",{attrs:{id:"绘制线"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#绘制线"}},[t._v("#")]),t._v(" 绘制线")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("lineTo(x, y)")]),t._v(":绘制一条从当前位置到指定x以及y位置的直线。")])]),t._v(" "),s("h3",{attrs:{id:"绘制矩形"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#绘制矩形"}},[t._v("#")]),t._v(" 绘制矩形")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("fillRect(x, y, width, height)")]),t._v(":绘制一个填充的矩形")]),t._v(" "),s("li",[s("code",[t._v("strokeRect(x, y, width, height)")]),t._v(":绘制一个矩形的边框")]),t._v(" "),s("li",[s("code",[t._v("clearRect(x, y, width, height)")]),t._v(":清除指定矩形区域")])]),t._v(" "),s("p",[t._v("以上方法执行后会"),s("strong",[t._v("即时生效")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"路径绘制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路径绘制"}},[t._v("#")]),t._v(" 路径绘制")]),t._v(" "),s("p",[t._v("使用路径绘制图形需要一些额外的步骤。")]),t._v(" "),s("ul",[s("li",[t._v("首先，你需要创建路径起始点。")]),t._v(" "),s("li",[t._v("然后你使用画图命令去画出路径。")]),t._v(" "),s("li",[t._v("一旦路径生成，你就能通过描边或填充路径区域(填充需要路径闭合)来渲染图形。")])]),t._v(" "),s("p",[t._v("以下是所要用到的函数：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("beginPath()")]),t._v(":新建一条路径，生成之后，图形绘制命令被指向到路径上生成路径。")]),t._v(" "),s("li",[s("code",[t._v("closePath()")]),t._v(":闭合路径之后图形绘制命令又重新指向到上下文中。这个方法会通过绘制一条从当前点到开始点的直线来闭合图形。")]),t._v(" "),s("li",[s("code",[t._v("stroke()")]),t._v(":通过路径来绘制图形轮廓(不会自动闭合路径)。")]),t._v(" "),s("li",[s("code",[t._v("fill()")]),t._v(":通过填充路径的内容区域生成实心的图形(会自动闭合路径)。")])]),t._v(" "),s("h3",{attrs:{id:"绘制圆弧"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#绘制圆弧"}},[t._v("#")]),t._v(" 绘制圆弧")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("arc(x, y, radius, startAngle, endAngle, anticlockwise)")]),t._v(":画一个以（x,y）为圆心的以radius为半径的圆弧（圆），从startAngle(开始弧度)开始到endAngle(结束弧度)结束，按照anticlockwise给定的方向（默认为"),s("code",[t._v("false")]),t._v("顺时针）来生成。")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),s("p",[t._v("arc()函数中表示角的单位是弧度，不是角度。角度与弧度的js表达式:"),s("b",[t._v("弧度=(Math.PI/180)*角度")]),t._v("。")])])])}),[],!1,null,null,null);a.default=e.exports}}]);