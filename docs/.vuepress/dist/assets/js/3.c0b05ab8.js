(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{351:function(t,s,a){t.exports=a.p+"assets/img/cache1.c8191575.png"},352:function(t,s,a){t.exports=a.p+"assets/img/cache2.324d9b5f.png"},353:function(t,s,a){t.exports=a.p+"assets/img/cache3.4c17e6be.png"},354:function(t,s,a){t.exports=a.p+"assets/img/cache4.98ebdd24.png"},355:function(t,s,a){t.exports=a.p+"assets/img/cache5.f3b799da.png"},356:function(t,s,a){t.exports=a.p+"assets/img/cache6.3603f1fd.png"},357:function(t,s,a){t.exports=a.p+"assets/img/cache7.24b12d79.png"},358:function(t,s,a){t.exports=a.p+"assets/img/cache8.3774ba57.png"},385:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"缓存及其优点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#缓存及其优点"}},[t._v("#")]),t._v(" 缓存及其优点")]),t._v(" "),n("p",[n("strong",[t._v("缓存")]),t._v("：是一种可以自动保存常见资源副本并可以在下一次请求中直接使用副本而非再次获取的技术。")]),t._v(" "),n("p",[t._v("也就是说，当我们首次进行资源请求之后，服务器在返回资源给客户端的同时，缓存服务器或本地缓存也会保存一份资源副本（在允许缓存的情况下），当我们下次再对该资源进行请求时，则会"),n("strong",[t._v("直接使用资源副本而不会从原始服务器再次请求文档")]),t._v("。")]),t._v(" "),n("p",[n("strong",[t._v("缓存的优点")]),t._v("：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("缓存可以减少冗余的数据传输。")])]),t._v(" "),n("li",[n("p",[t._v("缓存可以缓解网络瓶颈的问题。")])]),t._v(" "),n("li",[n("p",[t._v("缓存可以降低对原始服务器的要求。")])]),t._v(" "),n("li",[n("p",[t._v("缓存可以降低请求的距离时延。")])]),t._v(" "),n("li",[n("p",[t._v("客户端发送请求，服务器收到请求时，会在 200 OK 中回送该资源的"),n("code",[t._v("Last-Modified")]),t._v("和"),n("code",[t._v("ETag")]),t._v("头")])]),t._v(" "),n("li",[n("p",[t._v("客户端将该资源保存在"),n("code",[t._v("cache")]),t._v("中，并记录这两个属性。")])]),t._v(" "),n("li",[n("p",[t._v("当客户端需要发送相同的请求时，会在请求中携带"),n("code",[t._v("If-Modified-Since")]),t._v("和"),n("code",[t._v("If-None-Match")]),t._v("两个头。两个头的值分别是响应中"),n("code",[t._v("Last-Modified")]),t._v("和"),n("code",[t._v("ETag")]),t._v("头的值。")])]),t._v(" "),n("li",[n("p",[t._v("服务器通过这两个头判断本地资源未发生变化，客户端不需要重新下载，返回304响应。")])]),t._v(" "),n("li",[n("p",[t._v("客户端使用"),n("code",[t._v("cache")]),t._v("内缓存的资源。")])])]),t._v(" "),n("h2",{attrs:{id:"相关概念及图解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#相关概念及图解"}},[t._v("#")]),t._v(" 相关概念及图解")]),t._v(" "),n("p",[n("strong",[t._v("缓存命中")])]),t._v(" "),n("p",[t._v("如果某个请求的结果是由已缓存的副本提供的，被称作缓存命中。")]),t._v(" "),n("p",[n("strong",[t._v("缓存未命中")])]),t._v(" "),n("p",[t._v("如果缓存中没有可用的副本或者副本已经过期，则会将请求转发至原始服务器，这被称作缓存未命中 。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(351),alt:"缓存命中/缓存未命中"}})]),t._v(" "),n("p",[n("strong",[t._v("新鲜度检测")])]),t._v(" "),n("p",[t._v("HTTP通过缓存将服务器文档的副本保留一段时间。在这段时间里， 都认为文档是“新鲜的”，缓存可以在不联系服务器的情况下，直接提供该文档。但一旦已缓存副本停留的时间太长，超过了文档的新鲜度限值(freshness limit), 就认为对象“过时”了，在提供该文档之前，缓存要再次与服务器进行确认，以查看文档是否发生了变化。")]),t._v(" "),n("p",[n("strong",[t._v("再验证")])]),t._v(" "),n("p",[t._v("原始服务器上的内容可能会随时变化，缓存需要经常对其进行检测，看看它保存的副本是否仍是服务器上最新的副本。这些新鲜度检测被称为 HTTP 再验证。")]),t._v(" "),n("p",[t._v("缓存可以随时对副本进行再验证，但大部分缓存只在客户端发起请求，并且副本旧得足以需要检测的时候，才会对副本进行再验证。")]),t._v(" "),n("p",[n("strong",[t._v("再验证命中和再验证未命中")])]),t._v(" "),n("p",[t._v("缓存对缓存的副本进行再验证时，会向原始服务器发送一个再验证请求，如果内容没有发生变化，服务器会以304 Not Modified进行响应。这被称作是再验证命中或者缓慢命中。如果内容发生了变化，服务器会以200进行响应。这被称作再验证未命中。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(352),alt:""}})]),t._v(" "),n("h2",{attrs:{id:"缓存的处理步骤"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#缓存的处理步骤"}},[t._v("#")]),t._v(" 缓存的处理步骤")]),t._v(" "),n("ul",[n("li",[t._v("首先是当用户请求资源时，会判断是否有缓存，如果没有，则会向原服务器请求资源。")]),t._v(" "),n("li",[t._v("如果有缓存，则会进入强缓存的范畴，判断缓存是否新鲜，如果缓存新鲜，则会直接返回缓存副本给客户端。如果缓存不新鲜了，则表示强缓存失败，将会进入到协商缓存。")]),t._v(" "),n("li",[t._v("协商缓存将判断是否存在Etag和Last-Modified首部，通过这些首部验证资源是否发生过变化，如果未发生变化，则表示命中了协商缓存，会重定向到缓存副本，将资源返回给客户端，否则的话表示协商缓存未命中，服务器会返回新的资源。")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(353),alt:""}})]),t._v(" "),n("p",[n("strong",[t._v("强缓存")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(354),alt:""}})]),t._v(" "),n("p",[t._v("首次发起请求时，服务端会在Response Headers 中写入缓存新鲜时间。当请求再次发出时，如果缓存新鲜，将直接从缓存获取资源，而不会再与服务器发生通信。")]),t._v(" "),n("p",[n("strong",[t._v("协商缓存")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(355),alt:""}})]),t._v(" "),n("p",[t._v("协商缓存机制下，浏览器需要向服务器去询问缓存的相关信息，进而判断是重新发起请求、下载完整的响应，还是从本地获取缓存的资源。")]),t._v(" "),n("h2",{attrs:{id:"强缓存和协商缓存的实现原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#强缓存和协商缓存的实现原理"}},[t._v("#")]),t._v(" 强缓存和协商缓存的实现原理")]),t._v(" "),n("h3",{attrs:{id:"强缓存实现原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#强缓存实现原理"}},[t._v("#")]),t._v(" 强缓存实现原理")]),t._v(" "),n("p",[t._v("强缓存是通过"),n("code",[t._v("Expires")]),t._v("首部或"),n("code",[t._v("Cache-Control: max-age")]),t._v("来实现的。")]),t._v(" "),n("p",[t._v("Expires 和 Cache-Control: max-age都是用来标识资源的过期时间的首部。")]),t._v(" "),n("p",[n("strong",[t._v("Expires（HTTP/1.0）")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Expires描述的是一个绝对时间，由服务器返回，用GMT格式的字符串表示。")]),t._v("\nExpires"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Wed"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(" Sep "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2019")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("03")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("46")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GMT")]),t._v("\n")])])]),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),n("p",[t._v("由于expires是一个绝对时间，如果人为的更改时间，会对缓存的有效期造成影响，使缓存有效期的设置失去意义。因此在http1.1中我们有了expires的完全替代首部"),n("code",[t._v("cache-control：max-age")])])]),t._v(" "),n("p",[n("strong",[t._v("Cache-Control（HTTP/1.1）")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// max-age值是一个相对时间，它定义了文档的最大使用期")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从第一次生成文档到文档不再新鲜、无法使用为止，最大的合法生存时间(以秒为单位)。")]),t._v("\nCache"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Control"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" max"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("age"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("31536000")]),t._v("\n")])])]),n("p",[n("strong",[t._v("过程说明")])]),t._v(" "),n("ul",[n("li",[t._v("当我们首次请求资源时，服务器在返回资源的同时，会在Response Headers中写入"),n("code",[t._v("expires")]),t._v("首部或"),n("code",[t._v("cache-control")]),t._v("，标识缓存的过期时间，缓存副本会将该部分信息保存起来。")]),t._v(" "),n("li",[t._v("当再次请求该资源的时候，缓存会对"),n("code",[t._v("date")]),t._v("(date 是一个通用首部，表示原始服务器消息发出的时间。即表示的是首次请求某个资源的时间。)和"),n("code",[t._v("expires/cache-control")]),t._v("的时间进行对比，从而判断缓存副本是否足够新鲜。")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(356),alt:""}})]),t._v(" "),n("h3",{attrs:{id:"协商缓存实现原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存实现原理"}},[t._v("#")]),t._v(" 协商缓存实现原理")]),t._v(" "),n("p",[t._v("协商缓存是通过请求头"),n("code",[t._v("Last-Modified")]),t._v("或"),n("code",[t._v("Etag")]),t._v("来实现的。")]),t._v(" "),n("p",[t._v("Last-Modified 标识的是文档最后修改时间，Etag 则是以文档内容来进行编码的。")]),t._v(" "),n("p",[n("strong",[t._v("Last-Modified")]),t._v(" "),n("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/11/4/166de151763c87aa?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:""}})]),t._v(" "),n("p",[n("strong",[t._v("过程说明")])]),t._v(" "),n("ul",[n("li",[t._v("首次请求资源时，服务器在返回资源的同时，会在"),n("code",[t._v("Response Headers")]),t._v("中写入"),n("code",[t._v("Last-Modified")]),t._v("首部，表示该资源在服务器上的最后修改时间。")]),t._v(" "),n("li",[t._v("当再次请求该资源时，会在"),n("code",[t._v("Request Headers")]),t._v(" 中写入"),n("code",[t._v("If-Modified-Since")]),t._v("首部，此时的"),n("code",[t._v("If-Modified-Since")]),t._v("的值是首次请求资源时所返回的"),n("code",[t._v("Last-Modified")]),t._v("的值。")]),t._v(" "),n("li",[t._v("服务器接收到请求后，会根据"),n("code",[t._v("If-Modified-Since")]),t._v("的值判断资源在该日期之后是否发生过变化。")]),t._v(" "),n("li",[t._v("如果没有，则会返回304 Not Modified; 如果变化了，则会返回变化过后的资源，"),n("strong",[t._v("同时更新")]),n("code",[t._v("Last-Modified")]),t._v("的值。\n"),n("img",{attrs:{src:a(357),alt:""}})])]),t._v(" "),n("p",[n("img",{attrs:{src:a(358),alt:""}})]),t._v(" "),n("p",[n("strong",[t._v("Etag")]),t._v(" "),n("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/11/4/166de24605025515?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:""}})]),t._v(" "),n("p",[t._v("Etag的实现过程和Last-Modified完全一样，具体过程可参照Last-Modified，在这里就不做过多介绍了。")]),t._v(" "),n("h3",{attrs:{id:"last-modified存在的一些问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#last-modified存在的一些问题"}},[t._v("#")]),t._v(" Last-Modified存在的一些问题")]),t._v(" "),n("p",[t._v("有些文档可能会被周期性地重写，但实际包含的数据常常是一样的。尽管内容没有变化，但修改日期会发生变化。")]),t._v(" "),n("p",[t._v("有些文档可能被修改了，但所做修改并不重要，不需要让缓存重载数据(比如对拼写或注释的修改)。")]),t._v(" "),n("p",[t._v("有些服务器提供的文档会在亚秒间隙发生变化(比如，实时监视器)，对这些服务器来说，以一秒为粒度的修改日期可能就不够用了。")]),t._v(" "),n("p",[t._v("通过这些描述，我们可以总结出一些Last-Modified存在的缺陷：")]),t._v(" "),n("ul",[n("li",[t._v("无法感知文件内容是否真的发生了变化。 不该重新请求的时候，也会重新请求。")]),t._v(" "),n("li",[t._v("在秒以下的内容变化无法感知到。 该重新请求的时候，反而没有重新请求。")])]),t._v(" "),n("p",[t._v("对于上述问题，"),n("strong",[n("code",[t._v("Etag")]),t._v("作为"),n("code",[t._v("Last-Modified")]),t._v("的补充而出现")]),t._v("，Etag 是由服务器为每个资源生成的唯一的标识字符串，这个标识字符串是基于文件内容编码的，只要文件内容不同，它们对应的 Etag 就是不同的，因此 Etag 能够精准地感知文件的变化。")]),t._v(" "),n("h3",{attrs:{id:"etag-强验证器和弱验证器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#etag-强验证器和弱验证器"}},[t._v("#")]),t._v(" Etag 强验证器和弱验证器")]),t._v(" "),n("p",[t._v("强验证器要求文档的每个字节都相等，而弱验证器只要求文档的含义相等。")]),t._v(" "),n("p",[n("strong",[t._v("强验证：")]),n("code",[t._v('etag: "AkjdfOms1QWEsdfWE"')])]),t._v(" "),n("p",[n("strong",[t._v("弱验证（前面会加上‘ W/’ 来标识）：")]),n("code",[t._v('ETag: W/"c4f5-166b94fe170"')])]),t._v(" "),n("h3",{attrs:{id:"cache-control请求头常用属性说明"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cache-control请求头常用属性说明"}},[t._v("#")]),t._v(" Cache-Control请求头常用属性说明")]),t._v(" "),n("p",[n("strong",[t._v("max-age/s-maxage")])]),t._v(" "),n("p",[n("code",[t._v("s-maxage")]),t._v("指令的功能和"),n("code",[t._v("max-age")]),t._v("是相同的，它们唯一的不同点就在于"),n("code",[t._v("s-maxage")]),t._v("指令只适用于代理服务器缓存。"),n("code",[t._v("s-maxage")]),t._v("的优先级高于"),n("code",[t._v("max-age")]),t._v("。")]),t._v(" "),n("p",[n("strong",[t._v("public/private")])]),t._v(" "),n("p",[n("code",[t._v("public")]),t._v(" 与 "),n("code",[t._v("private")]),t._v(" 是针对资源是否能够被代理服务缓存而存在的一组对立概念。")]),t._v(" "),n("p",[t._v("如果我们为资源设置了 "),n("code",[t._v("public")]),t._v("，那么它既可以被浏览器缓存，也可以被代理服务器缓存；如果我们设置了 "),n("code",[t._v("private")]),t._v("，则该资源只能被浏览器缓存。")]),t._v(" "),n("p",[n("strong",[t._v("no-cache/no-store")])]),t._v(" "),n("p",[n("code",[t._v("no-cache")]),t._v("表示客户端要求缓存在提供其已缓存的副本之前必须先和原始服务器对该文档进行验证。即强制跳过强缓存阶段，直接进行协商缓存。强缓存并不能知道缓存是否真的足够新鲜，使用"),n("code",[t._v("no-cache")]),t._v("就是为了防止从缓存中返回过期的资源，对缓存进行再验证。")]),t._v(" "),n("p",[n("code",[t._v("no-store")]),t._v("表示的是禁止缓存，即每一次都是直接与原服务器进行通信，从原服务器返回资源。一般设置了"),n("code",[t._v("no-store")]),t._v("的资源，都暗示着该资源具有敏感性信息。")]),t._v(" "),n("h3",{attrs:{id:"优先级问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#优先级问题"}},[t._v("#")]),t._v(" 优先级问题")]),t._v(" "),n("p",[n("strong",[t._v("Expires 和 Cache-Control: max-age")])]),t._v(" "),n("p",[t._v("应用HTTP/1.1版本的缓存服务器遇到同时存在Expires首部字段的情况时，会优先处理max-age指令，而忽略掉Expires首部字段。 而HTTP/1.0版本的缓存服务器的情况则相反，max-age指令会被忽略掉。")]),t._v(" "),n("p",[n("strong",[t._v("Last-Modified 和 Etag")])]),t._v(" "),n("p",[t._v("查询资料中")]),t._v(" "),n("h2",{attrs:{id:"前后端具体如何实现http缓存？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前后端具体如何实现http缓存？"}},[t._v("#")]),t._v(" 前后端具体如何实现HTTP缓存？")]),t._v(" "),n("h3",{attrs:{id:"前端如何实现http缓存"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前端如何实现http缓存"}},[t._v("#")]),t._v(" 前端如何实现HTTP缓存")]),t._v(" "),n("p",[t._v("前端设置html页面缓存方法：静态的html页面想要设置使用缓存需要通过HTTP的META设置"),n("code",[t._v("expires")]),t._v("和"),n("code",[t._v("cache-control")]),t._v("设置如下网页元信息:")]),t._v(" "),n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("http-equiv")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("Cache-Control"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("content")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("max-age=7200"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("http-equiv")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("Expires"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("content")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("Mon, 20 Jul 2013 23:00:00 GMT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),n("p",[t._v("cache-control：no-cache || no-store || max-age")]),t._v(" "),n("ul",[n("li",[t._v("no-cache: 表面意为“数据内容不被缓存”，而实际数据是被缓存到本地的，只是每次请求时候直接绕过缓存这一环节直接向服务器请求最新资源")]),t._v(" "),n("li",[t._v("no-store: 指示缓存不存储此次请求的响应部分")]),t._v(" "),n("li",[t._v("max-age: 表示此次请求成功后 x 秒之内发送同样请求不会去服务器重新请求，而是使用本地缓存")])]),t._v(" "),n("h3",{attrs:{id:"后端如何实现http缓存："}},[n("a",{staticClass:"header-anchor",attrs:{href:"#后端如何实现http缓存："}},[t._v("#")]),t._v(" 后端如何实现HTTP缓存：")]),t._v(" "),n("p",[n("strong",[t._v("以NODE为例")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" http "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过设置 Cache-Control 实现缓存")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" server "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" http"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createServer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 中间代理服务器可以缓存，缓存时间是86400秒（60 * 60 * 24 = 86400，1天）")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Cache-Control 是 HTTP/1.1 提出的")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Expires 是 HTTP/1.0 提出的")]),t._v("\n  res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Cache-Control'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'public, max-age=86400'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nserver"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'8088'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" http "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过设置 ETag 实现缓存(ETag是资源内容计算出来的哈希值)")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" server "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" http"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createServer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("url"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" req"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("headers"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'if-none-match'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("headers"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'if-none-match'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 检查文件版本")]),t._v("\n    res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("statusCode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("304")]),t._v("\n    res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Etag'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a1efs5ed3qe1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xxx.html'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nserver"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'8088'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" http "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过设置 Last-Modified 实现缓存")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" server "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" http"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createServer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("url"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" req"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("headers"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'if-modified-since'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("headers"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'if-modified-since'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 检查文件更新时间戳")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果 if-modified-since 时间跟资源的最后修改时间相同，表示资源未过期")]),t._v("\n    res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("statusCode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("304")]),t._v("\n    res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 更新时间")]),t._v("\n    res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Last-Modified'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Date"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xxx.html'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nserver"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'8088'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[n("strong",[t._v("Vue项目部署Nginx常用配置")])]),t._v(" "),n("div",{staticClass:"language-.config extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('upstream backend {\n    server 127.0.0.1:7052;\n}\nserver {\n  listen       80;\n  server_name  domain.com www.domain.com;\n  client_max_body_size 10m;\n  root   /usr/share/nginx/project_dir;\n\n  location / {\n      try_files $uri /index.html; # vue history模式必须的配置\n      index index.html;\n  }\n\n  # 禁止缓存index.html页面\n  location /index.html {\n      add_header Cache-Control "no-cache, no-store, must-revalidate";\n  }\n\n  # 缓存静态文件\n  location ^~ /static/ {\n      add_header Cache-Control "public,max-age=31536000";\n  }\n\n  # 与后端api的请求\n  location ~ ^/api/ {\n      proxy_set_header Host $host;\n      proxy_set_header Remote_Addr $remote_addr;\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_pass http://backend;\n  }\n\n  location /web-socket/ {\n      proxy_pass http://backend;\n      proxy_http_version 1.1;\n      proxy_set_header Upgrade $http_upgrade;\n      proxy_set_header Connection "Upgrade";\n  }\n}\n')])])]),n("p",[t._v("参考：")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://juejin.im/entry/5a13be3bf265da432d27b7ec",target:"_blank",rel:"noopener noreferrer"}},[t._v("使用 HTTP 缓存：Etag, Last-Modified 与 Cache-Control"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://www.renfei.org/blog/http-caching.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("网站优化：浏览器缓存控制简介及配置策略"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://www.runoob.com/w3cnote/nginx-setup-intro.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nginx 配置详解"),n("OutboundLink")],1)])]),t._v(" "),n("h3",{attrs:{id:"小结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/11/4/166de9300ec9105c?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:""}})])])}),[],!1,null,null,null);s.default=e.exports}}]);